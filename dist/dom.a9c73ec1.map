{"version":3,"sources":["dom.js"],"names":["window","dom","string","container","document","createElement","innerHTML","trim","content","firstChild","node","node2","parentNode","insertBefore","nextSibling","parent","child","appendChild","parentTag","create","before","append","remove","x","arr","push","name","value","arguments","length","setAttribute","getAttribute","innerText","style","Object","key","className","classList","add","contains","event","fn","addEventListener","removeEventListener","selector","scope","querySelectorAll","children","Array","from","filter","n","nodeType","previousSibling","nodes","i","call","nl"],"mappings":"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","file":"dom.a9c73ec1.map","sourceRoot":"../src","sourcesContent":["window.dom = {\n  create(string) {\n    const container = document.createElement(\"template\");\n    container.innerHTML = string.trim();\n    return container.content.firstChild;\n  },\n  after(node, node2) {\n    node.parentNode.insertBefore(node2, node.nextSibling);\n  },\n  before(node, node2) {\n    node.parentNode.insertBefore(node2, node);\n  },\n  append(parent, child) {\n    parent.appendChild(child);\n  },\n  wrap(string, node) {\n    const parentTag = dom.create(string);\n    dom.before(node, parentTag);\n    dom.append(parentTag, node);\n  },\n  remove(node) {\n    node.remove();\n    return node;\n  },\n  empty(parent) {\n    const arr = [];\n    let x = parent.firstChild;\n    while (x) {\n      arr.push(dom.remove(parent.firstChild));\n      x = parent.firstChild;\n    }\n    return arr;\n  },\n  attr(node, name, value) {\n    if (arguments.length === 3) {\n      node.setAttribute(name, value);\n    } else if (arguments.length === 2) {\n      return node.getAttribute(name, value);\n    }\n  },\n  text(node, string) {\n    if (arguments.length === 2) {\n      node.innerText = string;\n    } else if (arguments.length === 1) {\n      return node.innerText;\n    }\n  },\n  html(node, string) {\n    if (arguments.length === 2) {\n      node.innerHTML = string;\n    } else if (arguments.length === 1) {\n      return node.innerHTML;\n    }\n  },\n  style(node, name, value) {\n    if (arguments.length === 2) {\n      if (typeof name === 'string') {\n        return node.style[name];\n      } else if (name instanceof Object) {\n        for (let key in name) {\n          node.style[key] = name[key];\n        }\n      }\n    } else if (arguments.length === 3) {\n      node.style[name] = value;\n    }\n  },\n  class: {\n    add(node, className) {\n      node.classList.add(className);\n    },\n    remove(node, className) {\n      node.classList.remove(className);\n    },\n    has(node, className) {\n      return node.classList.contains(className);\n    },\n  },\n  on(node, event, fn) {\n    node.addEventListener(event, fn);\n  },\n  off(node, event, fn) {\n    node.removeEventListener(event, fn);\n  },\n  find(selector, scope) {\n    return (scope || document).querySelectorAll(selector);\n  },\n  parent(node) {\n    return node.parentNode;\n  },\n  children(node) {\n    return node.children;\n  },\n  siblings(node) {\n    return Array.from(node.parentNode.children).filter(n => n !== node);\n  },\n  next(node) {\n    let x = node.nextSibling;\n    if (x && x.nodeType === 3) {\n      x = x.nextSibling;\n    }\n    return x;\n  },\n  previous(node) {\n    let x = node.previousSibling;\n    if (x && x.nodeType === 3) {\n      x = x.previousSibling;\n    }\n    return x;\n  },\n  each(nodes, fn) {\n    for (let i = 0; i < nodes.length; i++) {\n      fn.call(null, nodes[i]);\n    }\n  },\n  index(node) {\n    const nl = dom.children(dom.parent(node));\n    let i;\n    for (i = 0; i < nl.length; i++) {\n      if (nl[i] === node) {\n        break;\n      }\n    }\n    return i;\n  }\n}\n"]}